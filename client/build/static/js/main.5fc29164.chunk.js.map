{"version":3,"sources":["redux/types.js","redux/reducers/authReducer.js","redux/reducers/postReducer.js","redux/reducers/commentReducer.js","redux/reducers/index.js","redux/sagas/authSaga.js","redux/sagas/postSaga.js","redux/sagas/commentSaga.js","redux/sagas/index.js","store.js","components/Header.js","components/Footer.js","components/auth/LoginModal.js","components/auth/RegisterModal.js","components/search/searchInput.js","components/AppNavbar.js","components/spinner/Spinner.js","components/post/PostCardOne.js","components/post/Category.js","routes/normalRoute/PostCardList.js","components/editor/EditorConfig.js","components/editor/UploadAdapter.js","routes/normalRoute/PostWrite.js","components/comments/Comments.js","routes/normalRoute/PostDetail.js","routes/normalRoute/Search.js","routes/normalRoute/PostEdit.js","routes/normalRoute/CategoryResult.js","routes/normalRoute/Profile.js","routes/protectedRoute/ProtectedRoute.js","routes/Router.js","App.js","components/auth/loadUser.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","USER_LOADING_REQUEST","USER_LOADING_SUCCESS","USER_LOADING_FAILURE","CLEAR_ERROR_REQUEST","CLEAR_ERROR_SUCCESS","CLEAR_ERROR_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","POSTS_WRITE_REQUEST","POSTS_WRITE_FAILURE","POSTS_WRITE_SUCCESS","POSTS_LOADING_REQUEST","POSTS_LOADING_FAILURE","POSTS_LOADING_SUCCESS","POST_UPLOADING_REQUEST","POST_DETAIL_LOADING_REQUEST","POST_DETAIL_LOADING_FAILURE","POST_DETAIL_LOADING_SUCCESS","POST_DELETE_REQUEST","COMMENT_LOADING_REQUEST","COMMENT_LOADING_FAILURE","COMMENT_LOADING_SUCCESS","COMMENT_UPLOADING_REQUEST","COMMENT_UPLOADING_FAILURE","COMMENT_UPLOADING_SUCCESS","POST_EDIT_LOADING_REQUEST","POST_EDIT_LOADING_FAILURE","POST_EDIT_LOADING_SUCCESS","POST_EDIT_UPLOADING_REQUEST","POST_EDIT_UPLOADING_FAILURE","POST_EDIT_UPLOADING_SUCCESS","CATEGORY_FIND_REQUEST","CATEGORY_FIND_FAILURE","CATEGORY_FIND_SUCCESS","SEARCH_REQUEST","SEARCH_FAILURE","SEARCH_SUCCESS","PASSWORD_EDIT_UPLOADING_REQUEST","PASSWORD_EDIT_UPLOADING_FAILURE","PASSWORD_EDIT_UPLOADING_SUCCESS","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","userId","userName","userRole","errorMsg","successMsg","previousMatchMsg","authReducer","state","action","type","setItem","payload","id","role","removeItem","data","msg","_id","name","success_msg","previousMsg","fail_msg","match_msg","posts","postDetail","postCount","loading","error","creatorId","categoryFindResult","title","searchBy","searchResult","postFindResult","creator","comments","commentReducer","createRootReducer","history","combineReducers","router","connectRouter","auth","post","postReducer","comment","loginUser","watchLoginUser","logout","watchlogout","registerUser","watchregisterUser","clearError","watchclearError","userLoading","watchuserLoading","EditPassword","watchEditPassword","authSaga","loginUserAPI","loginData","axios","headers","call","result","put","response","takeEvery","registerUserAPI","req","console","userLoadingAPI","config","get","EditPasswordAPI","all","fork","loadPosts","watchLoadPosts","uploadPosts","watchuploadPosts","loadPostDetail","watchloadPostDetail","DeletePost","watchDeletePost","PostEditLoad","watchPostEditLoad","PostEditUpload","watchPostEditUpload","CategoryFind","watchCategoryFind","SearchResult","watchSearchResult","postSaga","loadPostAPI","uploadPostAPI","push","loadPostDetailAPI","DeletePostAPI","delete","PostEditLoadAPI","PostEditUploadAPI","CategoryFindAPI","encodeURIComponent","SearchResultAPI","loadComments","watchLoadComments","uploadComments","watchUpLoadComments","commentSaga","loadCommentsAPI","uploadCommentsAPI","rootSaga","dotenv","defaults","baseURL","process","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","Header","className","Row","Col","md","sm","Footer","Date","getFullYear","LoginModal","useState","modal","setModal","localMsg","setLocalMsg","email","password","form","setValues","dispatch","useDispatch","useSelector","useEffect","e","handleToggle","onChange","target","value","NavLink","onClick","href","Modal","isOpen","toggle","ModalHeader","ModalBody","Alert","color","Form","onSubmit","preventDefault","FormGroup","Label","for","Input","placeholder","Button","style","marginTop","block","RegisterModal","setValue","SearchInput","a","resetValue","current","useRef","innerRef","AppNavbar","setIsOpen","onLogout","useCallback","authLink","NavItem","to","outline","guestLink","Navbar","dark","expand","Container","NavbarToggler","Collapse","navbar","Nav","GrowingSpinner","Spinner","width","height","PostCardOne","Array","isArray","map","fileUrl","views","Card","CardImg","top","alt","src","CardBody","CardTitle","icon","faMouse","Badge","length","Categroy","categoryName","PostCardList","skipNumberRef","postCountRef","endMsg","options","lastPostElementRef","visible","setVisible","observer","IntersectionObserver","entry","isIntersecting","observe","unobserve","useOnScreen","threshold","Helmet","Category","ref","editorConfiguration","plugins","Essentials","Paragraph","Bold","Code","Italic","Heading","Indent","IndentBlock","Underline","Strikethrough","BlockQuote","Font","Alignment","List","Link","MediaEmbed","PasteFromOffice","Image","ImageStyle","ImageToolbar","ImageUpload","ImageResize","SimpleUploadAdapter","Table","TableToolbar","TextTransformation","toolbar","heading","model","view","class","fontSize","alignment","table","contentToolbar","image","resizeUnit","styles","typing","transformations","remove","language","simpleUpload","uploadUrl","MyUploadAdapter","loader","this","file","then","Promise","resolve","reject","_initRequest","_initListeners","_sendRequest","xhr","abort","XMLHttpRequest","open","responseType","genericErrorText","addEventListener","message","default","url","upload","evt","lengthComputable","uploadTotal","total","uploaded","loaded","FormData","append","send","Myinit","editor","createUploadAdapter","PostWrite","contents","category","ClassicEditor","onReady","onBlur","event","getData","match","whereImg_start","indexOf","whereImg_end","ext_name_find","result_Img_Url","ext_name","i","substring","Progress","animated","Comments","PostDetail","params","EditButton","HomeButton","Body","faPencilAlt","date","faCommentDots","BalloonEditor","disabled","creatorName","split","Search","searchTerm","useParams","PostEdit","defaultValue","CategoryResult","Profile","previousPassword","rePassword","body","size","offset","CardHeader","EditProtectedRoute","Component","component","rest","render","props","pathname","from","location","ProfileProtectedRoute","MyRouter","path","exact","App","loadUser","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5fc29164.chunk.js","sourcesContent":["// LOGIN\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\n// LOGOUT\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\n\n// USER LOADING\nexport const USER_LOADING_REQUEST = \"USER_LOADING_REQUEST\";\nexport const USER_LOADING_SUCCESS = \"USER_LOADING_SUCCESS\";\nexport const USER_LOADING_FAILURE = \"USER_LOADING_FAILURE\";\n\n// CLEAR ERROR\nexport const CLEAR_ERROR_REQUEST = \"CLEAR_ERROR_REQUEST\";\nexport const CLEAR_ERROR_SUCCESS = \"CLEAR_ERROR_SUCCESS\";\nexport const CLEAR_ERROR_FAILURE = \"CLEAR_ERROR_FAILURE\";\n\n// CLEAR ERROR\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\";\n\n// POST WRITE\nexport const POSTS_WRITE_REQUEST = \"POST_WRITE_REQUEST\";\nexport const POSTS_WRITE_FAILURE = \"POST_WRITE_FAILURE\";\nexport const POSTS_WRITE_SUCCESS = \"POST_WRITE_SUCCESS\";\n\n// POST WRITE\nexport const POSTS_LOADING_REQUEST = \"POST_LOADING_REQUEST\";\nexport const POSTS_LOADING_FAILURE = \"POST_LOADING_FAILURE\";\nexport const POSTS_LOADING_SUCCESS = \"POST_LOADING_SUCCESS\";\n\n// POST UPLOAD\nexport const POST_UPLOADING_REQUEST = \"POST_UPLOADING_REQUEST\";\nexport const POST_UPLOADING_FAILURE = \"POST_UPLOADING_FAILURE\";\nexport const POST_UPLOADING_SUCCESS = \"POST_UPLOADING_SUCCESS\";\n\n// POST Detail loading\nexport const POST_DETAIL_LOADING_REQUEST = \"POST_DETAIL_LOADING_REQUEST\";\nexport const POST_DETAIL_LOADING_FAILURE = \"POST_DETAIL_LOADING_FAILURE\";\nexport const POST_DETAIL_LOADING_SUCCESS = \"POST_DETAIL_LOADING_SUCCESS\";\n// POST DELETE\nexport const POST_DELETE_REQUEST = \"POST_DELETE_REQUEST\";\nexport const POST_DELETE_FAILURE = \"POST_DELETE_FAILURE\";\nexport const POST_DELETE_SUCCESS = \"POST_DELETE_SUCCESS\";\n\n// Comment loading\nexport const COMMENT_LOADING_REQUEST = \"COMMENT_LOADING_REQUEST\";\nexport const COMMENT_LOADING_FAILURE = \"COMMENT_LOADING_FAILURE\";\nexport const COMMENT_LOADING_SUCCESS = \"COMMENT_LOADING_SUCCESS\";\n\n// Comment uploading\nexport const COMMENT_UPLOADING_REQUEST = \"COMMENT_UPLOADING_REQUEST\";\nexport const COMMENT_UPLOADING_FAILURE = \"COMMENT_UPLOADING_FAILURE\";\nexport const COMMENT_UPLOADING_SUCCESS = \"COMMENT_UPLOADING_SUCCESS\";\n\n// Post Loading Edit\nexport const POST_EDIT_LOADING_REQUEST = \"POST_EDIT_LOADING_REQUEST\";\nexport const POST_EDIT_LOADING_FAILURE = \"POST_EDIT_LOADING_FAILURE\";\nexport const POST_EDIT_LOADING_SUCCESS = \"POST_EDIT_LOADING_SUCCESS\";\n\n// Post Uploading Edit\nexport const POST_EDIT_UPLOADING_REQUEST = \"POST_EDIT_UPLOADING_REQUEST\";\nexport const POST_EDIT_UPLOADING_FAILURE = \"POST_EDIT_UPLOADING_FAILURE\";\nexport const POST_EDIT_UPLOADING_SUCCESS = \"POST_EDIT_UPLOADING_SUCCESS\";\n\n// Post Uploading Edit\nexport const CATEGORY_FIND_REQUEST = \"CATEGORY_FIND_REQUEST\";\nexport const CATEGORY_FIND_FAILURE = \"CATEGORY_FIND_FAILURE\";\nexport const CATEGORY_FIND_SUCCESS = \"CATEGORY_FIND_SUCCESS\";\n\n// Post Uploading Edit\nexport const SEARCH_REQUEST = \"SEARCH_REQUEST\";\nexport const SEARCH_FAILURE = \"SEARCH_FAILURE\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\n\n// Password Edit\nexport const PASSWORD_EDIT_UPLOADING_REQUEST =\n  \"PASSWORD_EDIT_UPLOADING_REQUEST\";\nexport const PASSWORD_EDIT_UPLOADING_FAILURE =\n  \"PASSWORD_EDIT_UPLOADING_FAILURE\";\nexport const PASSWORD_EDIT_UPLOADING_SUCCESS =\n  \"PASSWORD_EDIT_UPLOADING_SUCCESS\";\n","import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n    CLEAR_ERROR_REQUEST,\n    CLEAR_ERROR_SUCCESS,\n    CLEAR_ERROR_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAILURE,\n    REGISTER_REQUEST,\n    REGISTER_SUCCESS,\n    REGISTER_FAILURE,\n    USER_LOADING_REQUEST,\n    USER_LOADING_SUCCESS,\n    USER_LOADING_FAILURE,\n    PASSWORD_EDIT_UPLOADING_REQUEST,\n    PASSWORD_EDIT_UPLOADING_SUCCESS,\n    PASSWORD_EDIT_UPLOADING_FAILURE,\n} from \"../types\";\n\nconst initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    isLoading: false,\n    user: \"\",\n    userId: \"\",\n    userName: \"\",\n    userRole: \"\",\n    errorMsg: \"\",\n    successMsg: \"\",\n    previousMatchMsg: \"\",\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case REGISTER_REQUEST:\n        case LOGIN_REQUEST:\n        case LOGOUT_REQUEST:\n            return {\n                ...state,\n                errorMsg: \"\",\n                isLoading: true,\n            };\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem(\"token\", action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false,\n                userId: action.payload.user.id,\n                userRole: action.payload.user.role,\n                errorMsg: \"\",\n            };\n\n        case REGISTER_FAILURE:\n        case LOGIN_FAILURE:\n        case LOGOUT_FAILURE:\n            localStorage.removeItem(\"token\");\n            return {\n                ...state,\n                ...action.payload,\n                token: null,\n                user: null,\n                userId: null,\n                isAuthenticated: false,\n                isLoading: false,\n                userRole: null,\n                errorMsg: action.payload.data.msg,\n            };\n        case LOGOUT_SUCCESS:\n            localStorage.removeItem(\"token\");\n            return {\n                token: null,\n                user: null,\n                userId: null,\n                isAuthenticated: false,\n                isLoading: false,\n                userRole: null,\n                errorMsg: \"\",\n            };\n\n        case USER_LOADING_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case USER_LOADING_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload,\n                userId: action.payload._id,\n                userName: action.payload.name,\n                userRole: action.payload.role,\n            };\n        case USER_LOADING_FAILURE:\n            return {\n                ...state,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false,\n                userRole: \"\",\n            };\n        case PASSWORD_EDIT_UPLOADING_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case PASSWORD_EDIT_UPLOADING_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                successMsg: action.payload.data.success_msg,\n                errorMsg: \"\",\n                previousMsg: \"\",\n            };\n        case PASSWORD_EDIT_UPLOADING_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                successMsg: \"\",\n                errorMsg: action.payload.fail_msg,\n                previousMatchMsg: action.payload.match_msg,\n            };\n        case CLEAR_ERROR_REQUEST:\n            return {\n                ...state,\n            };\n        case CLEAR_ERROR_SUCCESS:\n            return {\n                ...state,\n                errorMsg: \"\",\n                previousMatchMsg: \"\",\n            };\n        case CLEAR_ERROR_FAILURE:\n            return {\n                ...state,\n                errorMsg: \"Clear Error Fail\",\n                previousMatchMsg: \"Clear Error Fail\",\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;\n","import {\n  POSTS_LOADING_REQUEST,\n  POSTS_LOADING_SUCCESS,\n  POSTS_LOADING_FAILURE,\n  POSTS_WRITE_REQUEST,\n  POSTS_WRITE_SUCCESS,\n  POSTS_WRITE_FAILURE,\n  POST_DETAIL_LOADING_FAILURE,\n  POST_DETAIL_LOADING_SUCCESS,\n  POST_DETAIL_LOADING_REQUEST,\n  POST_EDIT_LOADING_REQUEST,\n  POST_EDIT_LOADING_SUCCESS,\n  POST_EDIT_LOADING_FAILURE,\n  POST_EDIT_UPLOADING_REQUEST,\n  POST_EDIT_UPLOADING_SUCCESS,\n  POST_EDIT_UPLOADING_FAILURE,\n  CATEGORY_FIND_REQUEST,\n  CATEGORY_FIND_SUCCESS,\n  CATEGORY_FIND_FAILURE,\n  SEARCH_REQUEST,\n  SEARCH_SUCCESS,\n  SEARCH_FAILURE,\n} from \"../types\";\n\nconst initialState = {\n  isAuthenticated: null,\n  posts: [],\n  postDetail: \"\",\n  postCount: \"\",\n  loading: false,\n  error: \"\",\n  creatorId: \"\",\n  categoryFindResult: \"\",\n  title: \"\",\n  searchBy: \"\",\n  searchResult: \"\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case POSTS_LOADING_REQUEST:\n      return {\n        ...state,\n\n        loading: true,\n      };\n    case POSTS_LOADING_SUCCESS:\n      return {\n        ...state,\n        posts: [...state.posts, ...action.payload.postFindResult],\n        categoryFindResult: action.payload.categoryFindResult,\n        postCount: action.payload.postCount,\n        loading: false,\n      };\n    case POSTS_LOADING_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case POSTS_WRITE_REQUEST:\n      return {\n        ...state,\n        posts: [],\n        loading: true,\n      };\n    case POSTS_WRITE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n      };\n    case POSTS_WRITE_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case POST_DETAIL_LOADING_REQUEST:\n      return {\n        ...state,\n        posts: [],\n        loading: true,\n      };\n    case POST_DETAIL_LOADING_SUCCESS:\n      return {\n        ...state,\n        postDetail: action.payload,\n        creatorId: action.payload.creator._id,\n        title: action.payload.title,\n        loading: false,\n      };\n    case POST_DETAIL_LOADING_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case POST_EDIT_LOADING_REQUEST:\n      return {\n        ...state,\n        posts: [],\n        loading: true,\n      };\n    case POST_EDIT_LOADING_SUCCESS:\n      return {\n        ...state,\n        postDetail: action.payload,\n\n        loading: false,\n      };\n    case POST_EDIT_LOADING_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case POST_EDIT_UPLOADING_REQUEST:\n      return {\n        ...state,\n\n        loading: true,\n      };\n    case POST_EDIT_UPLOADING_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case POST_EDIT_UPLOADING_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case CATEGORY_FIND_REQUEST:\n      return {\n        ...state,\n        posts: [],\n        loading: true,\n      };\n    case CATEGORY_FIND_SUCCESS:\n      return {\n        ...state,\n        categoryFindResult: action.payload,\n        loading: false,\n      };\n    case CATEGORY_FIND_FAILURE:\n      return {\n        ...state,\n        categoryFindResult: action.payload,\n        loading: false,\n      };\n    case SEARCH_REQUEST:\n      return {\n        ...state,\n        posts: [],\n        searchBy: action.payload,\n        loading: true,\n      };\n    case SEARCH_SUCCESS:\n      return {\n        ...state,\n        searchBy: action.payload,\n        searchResult: action.payload,\n        loading: false,\n      };\n    case SEARCH_FAILURE:\n      return {\n        ...state,\n        searchResult: action.payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  COMMENT_LOADING_REQUEST,\n  COMMENT_LOADING_SUCCESS,\n  COMMENT_LOADING_FAILURE,\n  COMMENT_UPLOADING_REQUEST,\n  COMMENT_UPLOADING_SUCCESS,\n  COMMENT_UPLOADING_FAILURE,\n} from \"../types\";\n\nconst initialState = {\n  comments: [],\n  creatorId: \"\",\n  loading: false,\n  isAuthenticated: false,\n};\n\nconst commentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case COMMENT_LOADING_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case COMMENT_LOADING_SUCCESS:\n      return {\n        ...state,\n        comments: action.payload,\n        loading: false,\n      };\n    case COMMENT_LOADING_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    case COMMENT_UPLOADING_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case COMMENT_UPLOADING_SUCCESS:\n      return {\n        ...state,\n        comments: [...state.comments, action.payload],\n        isAuthenticated: true,\n        loading: false,\n      };\n    case COMMENT_UPLOADING_FAILURE:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default commentReducer;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport authReducer from \"./authReducer.js\";\nimport postReducer from \"./postReducer.js\";\nimport commentReducer from \"./commentReducer.js\";\n\nconst createRootReducer = (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    auth: authReducer,\n    post: postReducer,\n    comment: commentReducer,\n  });\n\nexport default createRootReducer;\n","import axios from \"axios\";\nimport { call, put, takeEvery, all, fork } from \"redux-saga/effects\";\nimport {\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  LOGIN_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILURE,\n  LOGOUT_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAILURE,\n  REGISTER_REQUEST,\n  CLEAR_ERROR_REQUEST,\n  CLEAR_ERROR_FAILURE,\n  CLEAR_ERROR_SUCCESS,\n  USER_LOADING_SUCCESS,\n  USER_LOADING_FAILURE,\n  USER_LOADING_REQUEST,\n  PASSWORD_EDIT_UPLOADING_SUCCESS,\n  PASSWORD_EDIT_UPLOADING_REQUEST,\n  PASSWORD_EDIT_UPLOADING_FAILURE,\n} from \"../types\";\n\n// Login\n\nconst loginUserAPI = (loginData) => {\n  console.log(loginData, \"loginData\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  return axios.post(\"api/auth\", loginData, config);\n};\n\nfunction* loginUser(action) {\n  try {\n    const result = yield call(loginUserAPI, action.payload);\n    console.log(result);\n    yield put({\n      type: LOGIN_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: LOGIN_FAILURE,\n      payload: e.response,\n    });\n  }\n}\n\nfunction* watchLoginUser() {\n  yield takeEvery(LOGIN_REQUEST, loginUser);\n}\n\n// LOGOUT\n\nfunction* logout(action) {\n  try {\n    yield put({\n      type: LOGOUT_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: LOGOUT_FAILURE,\n    });\n    console.log(e);\n  }\n}\n\nfunction* watchlogout() {\n  yield takeEvery(LOGOUT_REQUEST, logout);\n}\n\n// Register\n\nconst registerUserAPI = (req) => {\n  console.log(req, \"req\");\n\n  return axios.post(\"api/user\", req);\n};\n\nfunction* registerUser(action) {\n  try {\n    const result = yield call(registerUserAPI, action.payload);\n    console.log(result, \"RegisterUser Data\");\n    yield put({\n      type: REGISTER_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: REGISTER_FAILURE,\n      payload: e.response,\n    });\n  }\n}\n\nfunction* watchregisterUser() {\n  yield takeEvery(REGISTER_REQUEST, registerUser);\n}\n\n// clear Error\n\nfunction* clearError() {\n  try {\n    yield put({\n      type: CLEAR_ERROR_SUCCESS,\n    });\n  } catch (e) {\n    yield put({\n      type: CLEAR_ERROR_FAILURE,\n    });\n    console.error(e);\n  }\n}\n\nfunction* watchclearError() {\n  yield takeEvery(CLEAR_ERROR_REQUEST, clearError);\n}\n\n// User Loading\n\nconst userLoadingAPI = (token) => {\n  console.log(token);\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n  return axios.get(\"api/auth/user\", config);\n};\n\nfunction* userLoading(action) {\n  try {\n    console.log(action, \"userLoading\");\n    const result = yield call(userLoadingAPI, action.payload);\n    yield put({\n      type: USER_LOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: USER_LOADING_FAILURE,\n      payload: e.response,\n    });\n  }\n}\n\nfunction* watchuserLoading() {\n  yield takeEvery(USER_LOADING_REQUEST, userLoading);\n}\n\n// Edit Password\n\nconst EditPasswordAPI = (payload) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = payload.token;\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n  return axios.post(`/api/user/${payload.userName}/profile`, payload, config);\n};\n\nfunction* EditPassword(action) {\n  try {\n    console.log(action, \"EditPassword\");\n    const result = yield call(EditPasswordAPI, action.payload);\n    yield put({\n      type: PASSWORD_EDIT_UPLOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: PASSWORD_EDIT_UPLOADING_FAILURE,\n      payload: e.response,\n    });\n  }\n}\n\nfunction* watchEditPassword() {\n  yield takeEvery(PASSWORD_EDIT_UPLOADING_REQUEST, EditPassword);\n}\n\nexport default function* authSaga() {\n  yield all([\n    fork(watchLoginUser),\n    fork(watchlogout),\n    fork(watchregisterUser),\n    fork(watchclearError),\n    fork(watchuserLoading),\n    fork(watchEditPassword),\n  ]);\n}\n","import axios from \"axios\";\nimport { put, call, takeEvery, all, fork } from \"redux-saga/effects\";\nimport { push } from \"connected-react-router\";\nimport {\n  POSTS_LOADING_FAILURE,\n  POSTS_LOADING_SUCCESS,\n  POSTS_LOADING_REQUEST,\n  POST_UPLOADING_SUCCESS,\n  POST_UPLOADING_FAILURE,\n  POST_UPLOADING_REQUEST,\n  POST_DETAIL_LOADING_SUCCESS,\n  POST_DETAIL_LOADING_FAILURE,\n  POST_DETAIL_LOADING_REQUEST,\n  POST_DELETE_SUCCESS,\n  POST_DELETE_FAILURE,\n  POST_DELETE_REQUEST,\n  POST_EDIT_LOADING_SUCCESS,\n  POST_EDIT_LOADING_FAILURE,\n  POST_EDIT_UPLOADING_SUCCESS,\n  POST_EDIT_UPLOADING_FAILURE,\n  POST_EDIT_UPLOADING_REQUEST,\n  POST_EDIT_LOADING_REQUEST,\n  CATEGORY_FIND_FAILURE,\n  CATEGORY_FIND_SUCCESS,\n  CATEGORY_FIND_REQUEST,\n  SEARCH_SUCCESS,\n  SEARCH_FAILURE,\n  SEARCH_REQUEST,\n} from \"../types\";\n\n// All Posts load\n\nconst loadPostAPI = (payload) => {\n  return axios.get(`/api/post/skip/${payload}`);\n};\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostAPI, action.payload);\n    console.log(result, \"loadPosts\");\n    yield put({\n      type: POSTS_LOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: POSTS_LOADING_FAILURE,\n      payload: e,\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeEvery(POSTS_LOADING_REQUEST, loadPosts);\n}\n\n// Post Upload\n\nconst uploadPostAPI = (payload) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = payload.token;\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n  return axios.post(\"/api/post\", payload, config);\n};\n\nfunction* uploadPosts(action) {\n  try {\n    console.log(action, \"uploadPost function\");\n    const result = yield call(uploadPostAPI, action.payload);\n    console.log(result, \"uploadPostAPI, action.payload\");\n    yield put({\n      type: POST_UPLOADING_SUCCESS,\n      payload: result.data,\n    });\n    yield put(push(`/post/${result.data._id}`));\n  } catch (e) {\n    yield put({\n      type: POST_UPLOADING_FAILURE,\n      payload: e,\n    });\n    yield put(push(\"/\"));\n  }\n}\n\nfunction* watchuploadPosts() {\n  yield takeEvery(POST_UPLOADING_REQUEST, uploadPosts);\n}\n\n// Post Detail\nconst loadPostDetailAPI = (payload) => {\n  console.log(payload);\n  return axios.get(`/api/post/${payload}`);\n};\n\nfunction* loadPostDetail(action) {\n  try {\n    console.log(action);\n    const result = yield call(loadPostDetailAPI, action.payload);\n    console.log(result, \"post_detail_saga_data\");\n    yield put({\n      type: POST_DETAIL_LOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: POST_DETAIL_LOADING_FAILURE,\n      payload: e,\n    });\n    yield put(push(\"/\"));\n  }\n}\n\nfunction* watchloadPostDetail() {\n  yield takeEvery(POST_DETAIL_LOADING_REQUEST, loadPostDetail);\n}\n\n// Post Delete\nconst DeletePostAPI = (payload) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = payload.token;\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return axios.delete(`/api/post/${payload.id}`, config);\n};\n\nfunction* DeletePost(action) {\n  try {\n    const result = yield call(DeletePostAPI, action.payload);\n    yield put({\n      type: POST_DELETE_SUCCESS,\n      payload: result.data,\n    });\n    yield put(push(\"/\"));\n  } catch (e) {\n    yield put({\n      type: POST_DELETE_FAILURE,\n      payload: e,\n    });\n  }\n}\n\nfunction* watchDeletePost() {\n  yield takeEvery(POST_DELETE_REQUEST, DeletePost);\n}\n\n// Post Edit Load\nconst PostEditLoadAPI = (payload) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = payload.token;\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return axios.get(`/api/post/${payload.id}/edit`, config);\n};\n\nfunction* PostEditLoad(action) {\n  try {\n    const result = yield call(PostEditLoadAPI, action.payload);\n    yield put({\n      type: POST_EDIT_LOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: POST_EDIT_LOADING_FAILURE,\n      payload: e,\n    });\n    yield put(push(\"/\"));\n  }\n}\n\nfunction* watchPostEditLoad() {\n  yield takeEvery(POST_EDIT_LOADING_REQUEST, PostEditLoad);\n}\n\n// Post Edit UpLoad\nconst PostEditUploadAPI = (payload) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const token = payload.token;\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return axios.post(`/api/post/${payload.id}/edit`, payload, config);\n};\n\nfunction* PostEditUpload(action) {\n  try {\n    const result = yield call(PostEditUploadAPI, action.payload);\n    yield put({\n      type: POST_EDIT_UPLOADING_SUCCESS,\n      payload: result.data,\n    });\n    yield put(push(`/post/${result.data._id}`));\n  } catch (e) {\n    yield put({\n      type: POST_EDIT_UPLOADING_FAILURE,\n      payload: e,\n    });\n  }\n}\n\nfunction* watchPostEditUpload() {\n  yield takeEvery(POST_EDIT_UPLOADING_REQUEST, PostEditUpload);\n}\n\n// Category Find\nconst CategoryFindAPI = (payload) => {\n  return axios.get(`/api/post/category/${encodeURIComponent(payload)}`);\n};\n\nfunction* CategoryFind(action) {\n  try {\n    const result = yield call(CategoryFindAPI, action.payload);\n    yield put({\n      type: CATEGORY_FIND_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    yield put({\n      type: CATEGORY_FIND_FAILURE,\n      payload: e,\n    });\n  }\n}\n\nfunction* watchCategoryFind() {\n  yield takeEvery(CATEGORY_FIND_REQUEST, CategoryFind);\n}\n\n// Search Find\nconst SearchResultAPI = (payload) => {\n  return axios.get(`/api/search/${encodeURIComponent(payload)}`);\n};\n\nfunction* SearchResult(action) {\n  try {\n    const result = yield call(SearchResultAPI, action.payload);\n    yield put({\n      type: SEARCH_SUCCESS,\n      payload: result.data,\n    });\n    yield put(push(`/search/${encodeURIComponent(action.payload)}`));\n  } catch (e) {\n    yield put({\n      type: SEARCH_FAILURE,\n      payload: e,\n    });\n    yield put(push(\"/\"));\n  }\n}\n\nfunction* watchSearchResult() {\n  yield takeEvery(SEARCH_REQUEST, SearchResult);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchLoadPosts),\n    fork(watchuploadPosts),\n    fork(watchloadPostDetail),\n    fork(watchDeletePost),\n    fork(watchPostEditLoad),\n    fork(watchPostEditUpload),\n    fork(watchCategoryFind),\n    fork(watchSearchResult),\n  ]);\n}\n","import axios from \"axios\";\nimport { call, put, takeEvery, all, fork } from \"redux-saga/effects\";\nimport {\n  COMMENT_LOADING_FAILURE,\n  COMMENT_LOADING_SUCCESS,\n  COMMENT_LOADING_REQUEST,\n  COMMENT_UPLOADING_SUCCESS,\n  COMMENT_UPLOADING_REQUEST,\n  COMMENT_UPLOADING_FAILURE,\n} from \"../types\";\nimport { push } from \"connected-react-router\";\n\n// Load Comment\n\nconst loadCommentsAPI = (payload) => {\n  console.log(payload, \"loadCommentAPI ID\");\n  return axios.get(`/api/post/${payload}/comments`);\n};\n\nfunction* loadComments(action) {\n  try {\n    const result = yield call(loadCommentsAPI, action.payload);\n    console.log(result);\n    yield put({\n      type: COMMENT_LOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: COMMENT_LOADING_FAILURE,\n      payload: e,\n    });\n    yield push(\"/\");\n  }\n}\n\nfunction* watchLoadComments() {\n  yield takeEvery(COMMENT_LOADING_REQUEST, loadComments);\n}\n\n// UpLoad Comment\n\nconst uploadCommentsAPI = (payload) => {\n  console.log(payload.id, \"loadCommentAPI ID\");\n  return axios.post(`/api/post/${payload.id}/comments`, payload);\n};\n\nfunction* uploadComments(action) {\n  try {\n    console.log(action);\n    const result = yield call(uploadCommentsAPI, action.payload);\n    console.log(result, \"UploadComment\");\n    yield put({\n      type: COMMENT_UPLOADING_SUCCESS,\n      payload: result.data,\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: COMMENT_UPLOADING_FAILURE,\n      payload: e,\n    });\n    yield push(\"/\");\n  }\n}\n\nfunction* watchUpLoadComments() {\n  yield takeEvery(COMMENT_UPLOADING_REQUEST, uploadComments);\n}\n\nexport default function* commentSaga() {\n  yield all([fork(watchLoadComments), fork(watchUpLoadComments)]);\n}\n","import { all, fork } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nimport authSaga from \"./authSaga\";\nimport postSaga from \"./postSaga\";\nimport commentSaga from \"./commentSaga\";\n\nimport dotenv from \"dotenv\";\ndotenv.config();\n\naxios.defaults.baseURL = process.env.REACT_APP_BASIC_SERVER_URL;\n\nexport default function* rootSaga() {\n  yield all([fork(authSaga), fork(postSaga), fork(commentSaga)]);\n}\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\n\nimport createRootReducer from \"./redux/reducers/index\";\nimport rootSaga from \"./redux/sagas\";\n\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst initialState = {};\n\nconst middlewares = [sagaMiddleware, routerMiddleware(history)];\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\nconst composeEnhancer =\n  process.env.NODE_ENV === \"production\" ? compose : devtools || compose;\n\nconst store = createStore(\n  createRootReducer(history),\n  initialState,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nconst Header = () => {\n    return (\n        <div id=\"page-header\" className=\"mb-3\">\n            <Row>\n                <Col md=\"6\" sm=\"auto\" className=\"text-center m-auto\">\n                    <h1>Practice makes perfect </h1>\n                    <p>星君のプロジェクトの作業ブログです</p>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nconst Footer = () => {\n  const thisYear = () => {\n    const year = new Date().getFullYear();\n    return year;\n  };\n\n  return (\n    <Row id=\"main-footer\" className=\"text-center p-2\">\n      <Col>\n        <p>\n          Copyright &copy; <span>{thisYear()}</span>\n        </p>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  NavLink,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Alert,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CLEAR_ERROR_REQUEST, LOGIN_REQUEST } from \"../../redux/types\";\n\nconst LoginModal = () => {\n  const [modal, setModal] = useState(false);\n  const [localMsg, setLocalMsg] = useState(\"\");\n  const [form, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const dispatch = useDispatch();\n  const { errorMsg } = useSelector((state) => state.auth);\n  useEffect(() => {\n    try {\n      setLocalMsg(errorMsg);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [errorMsg]);\n\n  const handleToggle = () => {\n    dispatch({\n      type: CLEAR_ERROR_REQUEST,\n    });\n    setModal(!modal);\n  };\n\n  const onChange = (e) => {\n    setValues({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { email, password } = form;\n    const user = { email, password };\n    console.log(user);\n    dispatch({\n      type: LOGIN_REQUEST,\n      payload: user,\n    });\n  };\n  return (\n    <div>\n      <NavLink onClick={handleToggle} href=\"#\">\n        Login\n      </NavLink>\n      <Modal isOpen={modal} toggle={handleToggle}>\n        <ModalHeader toggle={handleToggle}>Login</ModalHeader>\n        <ModalBody>\n          {localMsg ? <Alert color=\"danger\">{localMsg}</Alert> : null}\n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                onChange={onChange}\n              />\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                onChange={onChange}\n              />\n              <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                Login\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoginModal;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CLEAR_ERROR_REQUEST, REGISTER_REQUEST } from \"../../redux/types\";\nimport {\n  NavLink,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Alert,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\n\nconst RegisterModal = () => {\n  const [modal, setModal] = useState(false);\n  const [form, setValue] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [localMsg, setLocalMsg] = useState(\"\");\n  const { errorMsg } = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n  const handleToggle = () => {\n    dispatch({\n      type: CLEAR_ERROR_REQUEST,\n    });\n    setModal(!modal);\n  };\n\n  useEffect(() => {\n    try {\n      setLocalMsg(errorMsg);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [errorMsg]);\n\n  const onChange = (e) => {\n    setValue({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { name, email, password } = form;\n    const newUser = { name, email, password };\n    console.log(newUser, \"newUser\");\n    dispatch({\n      type: REGISTER_REQUEST,\n      payload: newUser,\n    });\n  };\n  return (\n    <div>\n      <NavLink onClick={handleToggle} href=\"#\">\n        Register\n      </NavLink>\n      <Modal isOpen={modal} toggle={handleToggle}>\n        <ModalHeader toggle={handleToggle}>Register</ModalHeader>\n        <ModalBody>\n          {localMsg ? <Alert color=\"danger\">{localMsg}</Alert> : null}\n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Name\"\n                onChange={onChange}\n              />\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                onChange={onChange}\n              />\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                onChange={onChange}\n              />\n              <Button color=\"dark\" className=\"mt-2\" block>\n                Register\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default RegisterModal;\n","import React, { useState, useRef, Fragment } from \"react\";\nimport { Form, Input } from \"reactstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { SEARCH_REQUEST } from \"../../redux/types\";\n\nconst SearchInput = () => {\n    const dispatch = useDispatch();\n    const [form, setValues] = useState({ searchBy: \"\" });\n\n    const onChange = (e) => {\n        setValues({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n        console.log(form);\n    };\n\n    const onSubmit = async (e) => {\n        await e.preventDefault();\n        const { searchBy } = form;\n\n        dispatch({\n            type: SEARCH_REQUEST,\n            payload: searchBy,\n        });\n\n        console.log(searchBy, \"Submit Body\");\n        resetValue.current.value = \"\";\n    };\n    const resetValue = useRef(null);\n\n    return (\n        <Fragment>\n            <Form onSubmit={onSubmit} className=\"col mt-2\">\n                <Input\n                    name=\"searchBy\"\n                    onChange={onChange}\n                    innerRef={resetValue}\n                />\n            </Form>\n        </Fragment>\n    );\n};\n\nexport default SearchInput;\n","import React, { Fragment, useState, useCallback, useEffect } from \"react\";\nimport {\n    Navbar,\n    Container,\n    NavbarToggler,\n    Collapse,\n    Nav,\n    NavItem,\n    Form,\n    Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { LOGOUT_REQUEST, POSTS_WRITE_REQUEST } from \"../redux/types\";\nimport LoginModal from \"../components/auth/LoginModal\";\nimport RegisterModal from \"../components/auth/RegisterModal\";\nimport SearchInput from \"./search/searchInput\";\n\nconst AppNavbar = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const { isAuthenticated, user, userRole } = useSelector(\n        (state) => state.auth\n    );\n    console.log(userRole, \"UserRole\");\n\n    const dispatch = useDispatch();\n\n    const onLogout = useCallback(() => {\n        dispatch({\n            type: LOGOUT_REQUEST,\n        });\n    }, [dispatch]);\n\n    useEffect(() => {\n        setIsOpen(false);\n    }, [user]);\n\n    const handleToggle = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const addPostClick = () => {\n        dispatch({\n            type: POSTS_WRITE_REQUEST,\n        });\n    };\n\n    const authLink = (\n        <Fragment>\n            <NavItem>\n                {userRole === \"MainJuin\" ? (\n                    <Form className=\"col mt-2\">\n                        <Link\n                            to=\"/post\"\n                            className=\"btn btn-success block text-white px-3\"\n                            onClick={addPostClick}\n                        >\n                            Add Post\n                        </Link>\n                    </Form>\n                ) : (\n                    \"\"\n                )}\n            </NavItem>\n            <NavItem className=\"d-flex justify-content-center\">\n                <Form className=\"col mt-2\">\n                    {user && user.name ? (\n                        <Link to={`/user/${user.name}/profile`}>\n                            <Button\n                                outline\n                                color=\"light\"\n                                className=\"px-3\"\n                                block\n                            >\n                                <strong>\n                                    {user ? `Welcome ${user.name}` : \"\"}\n                                </strong>\n                            </Button>\n                        </Link>\n                    ) : (\n                        <Button outline color=\"light\" className=\"px-3\" block>\n                            <strong>No User</strong>\n                        </Button>\n                    )}\n                </Form>\n            </NavItem>\n            <NavItem>\n                <Form className=\"col\">\n                    <Link onClick={onLogout} to=\"#\" className=\"\">\n                        <Button outline color=\"light\" className=\"mt-2\" block>\n                            Logout\n                        </Button>\n                    </Link>\n                </Form>\n            </NavItem>\n        </Fragment>\n    );\n\n    const guestLink = (\n        <Fragment>\n            <NavItem>\n                <RegisterModal />\n            </NavItem>\n            <NavItem>\n                <LoginModal />\n            </NavItem>\n        </Fragment>\n    );\n\n    return (\n        <Fragment>\n            <Navbar color=\"dark\" dark expand=\"lg\" className=\"sticky-top\">\n                <Container>\n                    <Link to=\"/\" className=\"text-white text-decoration-none\">\n                        Hosikun IT Blog\n                    </Link>\n                    <NavbarToggler onClick={handleToggle} />\n                    <Collapse isOpen={isOpen} navbar>\n                        <SearchInput isOpen={isOpen} />\n                        <Nav\n                            className=\"ml-auto d-felx justify-content-around\"\n                            navbar\n                        >\n                            {isAuthenticated ? authLink : guestLink}\n                        </Nav>\n                    </Collapse>\n                </Container>\n            </Navbar>\n        </Fragment>\n    );\n};\n\nexport default AppNavbar;\n","import React, { Fragment } from \"react\";\nimport { Row, Spinner } from \"reactstrap\";\n\nexport const GrowingSpinner = (\n  <Fragment>\n    <Row className=\"d-flex justify-content-center m-5\">\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"primary\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"secondary\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"success\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"danger\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"warning\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"info\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"light\"\n      />\n      <Spinner\n        style={{ width: \"2rem\", height: \"2rem\" }}\n        type=\"grow\"\n        color=\"dark\"\n      />\n    </Row>\n  </Fragment>\n);\n","import React, { Fragment } from \"react\";\nimport {\n    Card,\n    CardImg,\n    CardBody,\n    CardTitle,\n    Button,\n    Badge,\n    Row,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMouse } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PostCardOne = ({ posts }) => {\n    return (\n        <Fragment>\n            {Array.isArray(posts)\n                ? posts.map(({ _id, title, fileUrl, comments, views }) => {\n                      return (\n                          <div key={_id} className=\"col-md-4\">\n                              <Link\n                                  to={`/post/${_id}`}\n                                  className=\"text-dark text-decoration-none\"\n                              >\n                                  <Card className=\"mb-3\">\n                                      <CardImg\n                                          top\n                                          alt=\"card image\"\n                                          src={fileUrl}\n                                      />\n                                      <CardBody>\n                                          <CardTitle className=\"text-truncate d-flex justify-content-between\">\n                                              <span className=\"text-truncate\">\n                                                  {title}{\" \"}\n                                              </span>\n                                              <span>\n                                                  <FontAwesomeIcon\n                                                      icon={faMouse}\n                                                  />\n                                                  &nbsp;&nbsp;\n                                                  <span>{views}</span>\n                                              </span>\n                                          </CardTitle>\n                                          <Row>\n                                              <Button\n                                                  color=\"primary\"\n                                                  className=\"p-2 btn-block\"\n                                              >\n                                                  More{\" \"}\n                                                  <Badge color=\"light\">\n                                                      {comments.length}\n                                                  </Badge>\n                                              </Button>\n                                          </Row>\n                                      </CardBody>\n                                  </Card>\n                              </Link>\n                          </div>\n                      );\n                  })\n                : \"\"}\n        </Fragment>\n    );\n};\n\nexport default PostCardOne;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Badge } from \"reactstrap\";\n\nconst Categroy = ({ posts }) => {\n  console.log(posts);\n  return (\n    <>\n      {Array.isArray(posts)\n        ? posts.map(({ _id, categoryName, posts }) => (\n            <div key={_id} className=\"mx-1 mt-1 my_category\">\n              <Link\n                to={`/post/category/${categoryName}`}\n                className=\"text-dark text-decoration-none\"\n              >\n                <span className=\"ml-1\">\n                  <Button color=\"info\">\n                    {categoryName} <Badge color=\"light\">{posts.length}</Badge>\n                  </Button>\n                </span>\n              </Link>\n            </div>\n          ))\n        : \"\"}\n    </>\n  );\n};\n\nexport default Categroy;\n","import React, { Fragment, useRef, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { POSTS_LOADING_REQUEST } from \"../../redux/types\";\nimport { Helmet } from \"react-helmet\";\nimport { Row, Alert } from \"reactstrap\";\nimport { GrowingSpinner } from \"../../components/spinner/Spinner\";\nimport PostCardOne from \"../../components/post/PostCardOne\";\nimport Category from \"../../components/post/Category\";\n\nconst PostCardList = () => {\n    const { posts, categoryFindResult, loading, postCount } = useSelector(\n        (state) => state.post\n    );\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: POSTS_LOADING_REQUEST, payload: 0 });\n    }, [dispatch]);\n\n    ////////////////////////////////////////\n    const skipNumberRef = useRef(0);\n    const postCountRef = useRef(0);\n    const endMsg = useRef(false);\n\n    postCountRef.current = postCount - 6;\n\n    const useOnScreen = (options) => {\n        const lastPostElementRef = useRef();\n\n        const [visible, setVisible] = useState(false);\n\n        useEffect(() => {\n            const observer = new IntersectionObserver(([entry]) => {\n                setVisible(entry.isIntersecting);\n\n                if (entry.isIntersecting) {\n                    let remainPostCount =\n                        postCountRef.current - skipNumberRef.current;\n                    if (remainPostCount >= 0) {\n                        dispatch({\n                            type: POSTS_LOADING_REQUEST,\n                            payload: skipNumberRef.current + 6,\n                        });\n                        skipNumberRef.current += 6;\n                    } else {\n                        endMsg.current = true;\n                        console.log(endMsg.current);\n                    }\n                }\n            }, options);\n\n            if (lastPostElementRef.current) {\n                observer.observe(lastPostElementRef.current);\n            }\n\n            const LastElementReturnFunc = () => {\n                if (lastPostElementRef.current) {\n                    observer.unobserve(lastPostElementRef.current);\n                }\n            };\n\n            return LastElementReturnFunc;\n        }, [lastPostElementRef, options]);\n\n        return [lastPostElementRef, visible];\n    };\n\n    ////////////////////////////////////////\n    const [lastPostElementRef, visible] = useOnScreen({\n        threshold: \"0.5\",\n    });\n    console.log(visible, \"visible\", skipNumberRef.current, \"skipNum\");\n\n    return (\n        <Fragment>\n            <Helmet title=\"Home\" />\n\n            <Row className=\"border-bottom border-top border-primary py-2 mb-3 \">\n                <Category posts={categoryFindResult} />\n            </Row>\n\n            <Row>{posts ? <PostCardOne posts={posts} /> : GrowingSpinner}</Row>\n\n            <div ref={lastPostElementRef}>{loading && GrowingSpinner}</div>\n            {loading ? (\n                \"\"\n            ) : endMsg ? (\n                <div>\n                    <Alert\n                        color=\"danger\"\n                        className=\"text-center font-weight-bolder\"\n                    >\n                        No more posts\n                    </Alert>\n                </div>\n            ) : (\n                \"\"\n            )}\n        </Fragment>\n    );\n};\n\nexport default PostCardList;\n","import Essentials from \"@ckeditor/ckeditor5-essentials/src/essentials\";\n\nimport Paragraph from \"@ckeditor/ckeditor5-paragraph/src/paragraph\";\n\nimport Bold from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\n\nimport Italic from \"@ckeditor/ckeditor5-basic-styles/src/italic\";\n\nimport Underline from \"@ckeditor/ckeditor5-basic-styles/src/underline\";\n\nimport Strikethrough from \"@ckeditor/ckeditor5-basic-styles/src/strikethrough\";\n\nimport Code from \"@ckeditor/ckeditor5-basic-styles/src/code\";\n\nimport BlockQuote from \"@ckeditor/ckeditor5-block-quote/src/blockquote\";\n\nimport Link from \"@ckeditor/ckeditor5-link/src/link\";\n\nimport MediaEmbed from \"@ckeditor/ckeditor5-media-embed/src/mediaembed\";\n\nimport PasteFromOffice from \"@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice\";\n\nimport Heading from \"@ckeditor/ckeditor5-heading/src/heading\";\n\nimport Font from \"@ckeditor/ckeditor5-font/src/font\";\n\nimport Image from \"@ckeditor/ckeditor5-image/src/image\";\n\nimport ImageStyle from \"@ckeditor/ckeditor5-image/src/imagestyle\";\n\nimport ImageToolbar from \"@ckeditor/ckeditor5-image/src/imagetoolbar\";\n\nimport ImageUpload from \"@ckeditor/ckeditor5-image/src/imageupload\";\n\nimport ImageResize from \"@ckeditor/ckeditor5-image/src/imageresize\";\n\nimport List from \"@ckeditor/ckeditor5-list/src/list\";\n\nimport Alignment from \"@ckeditor/ckeditor5-alignment/src/alignment\";\n\nimport Table from \"@ckeditor/ckeditor5-table/src/table\";\n\nimport TableToolbar from \"@ckeditor/ckeditor5-table/src/tabletoolbar\";\n\nimport TextTransformation from \"@ckeditor/ckeditor5-typing/src/texttransformation\";\n\nimport Indent from \"@ckeditor/ckeditor5-indent/src/indent\";\n\nimport IndentBlock from \"@ckeditor/ckeditor5-indent/src/indentblock\";\nimport \"@ckeditor/ckeditor5-build-classic/build/translations/ko\";\n\n/* import Base64UploadAdapter from \"@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter\"; */\n\nimport SimpleUploadAdapter from \"@ckeditor/ckeditor5-upload/src/adapters/simpleuploadadapter\";\n\nimport dotenv from \"dotenv\";\n\ndotenv.config();\n\nexport const editorConfiguration = {\n  plugins: [\n    Essentials,\n\n    Paragraph,\n\n    Bold,\n\n    Code,\n\n    Italic,\n\n    Heading,\n\n    Indent,\n\n    IndentBlock,\n\n    Underline,\n\n    Strikethrough,\n\n    BlockQuote,\n\n    Font,\n\n    Alignment,\n\n    List,\n\n    Link,\n\n    MediaEmbed,\n\n    PasteFromOffice,\n\n    Image,\n\n    ImageStyle,\n\n    ImageToolbar,\n\n    ImageUpload,\n\n    ImageResize,\n\n    SimpleUploadAdapter,\n\n    Table,\n\n    TableToolbar,\n\n    TextTransformation,\n  ],\n\n  toolbar: [\n    \"heading\",\n\n    \"|\",\n\n    \"bold\",\n\n    \"italic\",\n\n    \"underline\",\n\n    \"strikethrough\",\n\n    \"code\",\n\n    \"|\",\n\n    \"fontSize\",\n\n    \"fontColor\",\n\n    \"fontBackgroundColor\",\n\n    \"|\",\n\n    \"alignment\",\n\n    \"outdent\",\n\n    \"indent\",\n\n    \"bulletedList\",\n\n    \"numberedList\",\n\n    \"blockQuote\",\n\n    \"|\",\n\n    \"link\",\n\n    \"insertTable\",\n\n    \"imageUpload\",\n\n    \"mediaEmbed\",\n\n    \"|\",\n\n    \"undo\",\n\n    \"redo\",\n  ],\n\n  heading: {\n    options: [\n      {\n        model: \"paragraph\",\n\n        view: \"p\",\n\n        title: \"본문\",\n\n        class: \"ck-heading_paragraph\",\n      },\n\n      {\n        model: \"heading1\",\n\n        view: \"h1\",\n\n        title: \"헤더1\",\n\n        class: \"ck-heading_heading1\",\n      },\n\n      {\n        model: \"heading2\",\n\n        view: \"h2\",\n\n        title: \"헤더2\",\n\n        class: \"ck-heading_heading2\",\n      },\n\n      {\n        model: \"heading3\",\n\n        view: \"h3\",\n\n        title: \"헤더3\",\n\n        class: \"ck-heading_heading3\",\n      },\n    ],\n  },\n\n  fontSize: {\n    options: [\n      9,\n\n      10,\n\n      11,\n\n      12,\n\n      13,\n\n      14,\n\n      15,\n\n      16,\n\n      17,\n\n      18,\n\n      19,\n\n      20,\n\n      21,\n\n      23,\n\n      25,\n\n      27,\n\n      29,\n\n      31,\n\n      33,\n\n      35,\n    ],\n  },\n\n  alignment: {\n    options: [\"justify\", \"left\", \"center\", \"right\"],\n  },\n\n  table: {\n    contentToolbar: [\"tableColumn\", \"tableRow\", \"mergeTableCells\"],\n  },\n\n  image: {\n    resizeUnit: \"px\",\n\n    toolbar: [\n      \"imageStyle:alignLeft\",\n\n      \"imageStyle:full\",\n\n      \"imageStyle:alignRight\",\n\n      \"|\",\n\n      \"imageTextAlternative\",\n    ],\n\n    styles: [\"full\", \"alignLeft\", \"alignRight\"],\n  },\n\n  typing: {\n    transformations: {\n      remove: [\n        \"enDash\",\n\n        \"emDash\",\n\n        \"oneHalf\",\n\n        \"oneThird\",\n\n        \"twoThirds\",\n\n        \"oneForth\",\n\n        \"threeQuarters\",\n      ],\n    },\n  },\n\n  language: \"ko\",\n\n  simpleUpload: {\n    uploadUrl: `${process.env.REACT_APP_BASIC_SERVER_URL}/api/post/image`,\n\n    // Headers sent along with the XMLHttpRequest to the upload server.\n\n    headers: {\n      \"X-CSRF-TOKEN\": \"CSFR-Token\",\n    },\n  },\n};\n\nexport const ReadOnly_Configuration = {\n  toolbar: [\"heading\"],\n\n  heading: {},\n};\n","import dotenv from \"dotenv\";\ndotenv.config();\n\nclass MyUploadAdapter {\n  constructor(loader) {\n    // The file loader instance to use during the upload.\n    this.loader = loader;\n  }\n\n  // Starts the upload process.\n  upload() {\n    return this.loader.file.then(\n      (file) =>\n        new Promise((resolve, reject) => {\n          this._initRequest();\n          this._initListeners(resolve, reject, file);\n          this._sendRequest(file);\n        })\n    );\n  }\n\n  // Aborts the upload process.\n  abort() {\n    if (this.xhr) {\n      this.xhr.abort();\n    }\n  }\n\n  // Initializes the XMLHttpRequest object using the URL passed to the constructor.\n  _initRequest() {\n    const xhr = (this.xhr = new XMLHttpRequest());\n\n    // Note that your request may look different. It is up to you and your editor\n    // integration to choose the right communication channel. This example uses\n    // a POST request with JSON as a data structure but your configuration\n    // could be different.\n    xhr.open(\n      \"POST\",\n      `${process.env.REACT_APP_BASIC_SERVER_URL}/api/post/image`,\n      true\n    );\n    xhr.responseType = \"json\";\n  }\n\n  // Initializes XMLHttpRequest listeners.\n  _initListeners(resolve, reject, file) {\n    const xhr = this.xhr;\n    const loader = this.loader;\n    const genericErrorText = `Couldn't upload file: ${file.name}.`;\n\n    xhr.addEventListener(\"error\", () => reject(genericErrorText));\n    xhr.addEventListener(\"abort\", () => reject());\n    xhr.addEventListener(\"load\", () => {\n      const response = xhr.response;\n\n      // This example assumes the XHR server's \"response\" object will come with\n      // an \"error\" which has its own \"message\" that can be passed to reject()\n      // in the upload promise.\n      //\n      // Your integration may handle upload errors in a different way so make sure\n      // it is done properly. The reject() function must be called when the upload fails.\n      if (!response || response.error) {\n        return reject(\n          response && response.error ? response.error.message : genericErrorText\n        );\n      }\n\n      // If the upload is successful, resolve the upload promise with an object containing\n      // at least the \"default\" URL, pointing to the image on the server.\n      // This URL will be used to display the image in the content. Learn more in the\n      // UploadAdapter#upload documentation.\n      resolve({\n        default: response.url,\n      });\n    });\n\n    // Upload progress when it is supported. The file loader has the #uploadTotal and #uploaded\n    // properties which are used e.g. to display the upload progress bar in the editor\n    // user interface.\n    if (xhr.upload) {\n      xhr.upload.addEventListener(\"progress\", (evt) => {\n        if (evt.lengthComputable) {\n          loader.uploadTotal = evt.total;\n          loader.uploaded = evt.loaded;\n        }\n      });\n    }\n  }\n\n  // Prepares the data and sends the request.\n  _sendRequest(file) {\n    // Prepare the form data.\n    const data = new FormData();\n\n    data.append(\"upload\", file);\n\n    // Important note: This is the right place to implement security mechanisms\n    // like authentication and CSRF protection. For instance, you can use\n    // XMLHttpRequest.setRequestHeader() to set the request headers containing\n    // the CSRF token generated earlier by your application.\n\n    // Send the request.\n    this.xhr.send(data);\n  }\n}\n\n// ...\n\nconst Myinit = (editor) => {\n  editor.plugins.get(\"FileRepository\").createUploadAdapter = (loader) => {\n    // Configure the URL to the upload script in your back-end here!\n    return new MyUploadAdapter(loader);\n  };\n};\n\nexport default Myinit;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n    Col,\n    Progress,\n} from \"reactstrap\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-editor-classic/src/classiceditor\";\nimport { editorConfiguration } from \"../../components/editor/EditorConfig\";\nimport Myinit from \"../../components/editor/UploadAdapter\";\nimport { POST_UPLOADING_REQUEST } from \"../../redux/types\";\n\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nconst PostWrite = () => {\n    const { isAuthenticated } = useSelector((state) => state.auth);\n    const [form, setValues] = useState({\n        title: \"\",\n        contents: \"\",\n        fileUrl: \"\",\n    });\n    const dispatch = useDispatch();\n\n    const onSubmit = async (e) => {\n        await e.preventDefault();\n        const { title, contents, fileUrl, category } = form;\n        const token = localStorage.getItem(\"token\");\n        const body = { title, contents, fileUrl, category, token };\n        dispatch({\n            type: POST_UPLOADING_REQUEST,\n            payload: body,\n        });\n    };\n\n    const onChange = (e) => {\n        setValues({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const getDataFromCKEditor = (event, editor) => {\n        const data = editor.getData();\n        console.log(data);\n\n        if (data && data.match(\"<img src=\")) {\n            const whereImg_start = data.indexOf(\"<img src=\");\n            console.log(whereImg_start);\n            let whereImg_end = \"\";\n            let ext_name_find = \"\";\n            let result_Img_Url = \"\";\n\n            const ext_name = [\"jpeg\", \"png\", \"jpg\", \"gif\"];\n\n            for (let i = 0; i < ext_name.length; i++) {\n                if (data.match(ext_name[i])) {\n                    console.log(data.indexOf(`${ext_name[i]}`));\n                    ext_name_find = ext_name[i];\n                    whereImg_end = data.indexOf(`${ext_name[i]}`);\n                }\n            }\n            console.log(ext_name_find);\n            console.log(whereImg_end);\n\n            if (ext_name_find === \"jpeg\") {\n                result_Img_Url = data.substring(\n                    whereImg_start + 10,\n                    whereImg_end + 4\n                );\n            } else {\n                result_Img_Url = data.substring(\n                    whereImg_start + 10,\n                    whereImg_end + 3\n                );\n            }\n\n            console.log(result_Img_Url, \"result_Img_Url\");\n            setValues({\n                ...form,\n                fileUrl: result_Img_Url,\n                contents: data,\n            });\n        } else {\n            setValues({\n                ...form,\n                fileUrl: process.env.REACT_APP_BASIC_IMAGE_URL,\n                contents: data,\n            });\n        }\n    };\n\n    return (\n        <div>\n            {isAuthenticated ? (\n                <Form onSubmit={onSubmit}>\n                    <FormGroup className=\"mb-3\">\n                        <Label for=\"title\">Title</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"title\"\n                            id=\"title\"\n                            className=\"form-control\"\n                            onChange={onChange}\n                        />\n                    </FormGroup>\n                    <FormGroup className=\"mb-3\">\n                        <Label for=\"category\">Category</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"category\"\n                            id=\"category\"\n                            className=\"form-control\"\n                            onChange={onChange}\n                        />\n                    </FormGroup>\n                    <FormGroup className=\"mb-3\">\n                        <Label for=\"content\">Content</Label>\n                        <CKEditor\n                            editor={ClassicEditor}\n                            config={editorConfiguration}\n                            onReady={Myinit}\n                            onBlur={getDataFromCKEditor}\n                        />\n                        <Button\n                            color=\"success\"\n                            block\n                            className=\"mt-3 col-md-2 offset-md-10 mb-3\"\n                        >\n                            Submit\n                        </Button>\n                    </FormGroup>\n                </Form>\n            ) : (\n                <Col width={50} className=\"p-5 m-5\">\n                    <Progress animated color=\"info\" value={100} />\n                </Col>\n            )}\n        </div>\n    );\n};\n\nexport default PostWrite;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  COMMENT_UPLOADING_REQUEST,\n  COMMENT_LOADING_REQUEST,\n} from \"../../redux/types\";\nimport { Form, FormGroup, Input, Button, Row } from \"reactstrap\";\n\nconst Comments = ({ id, userName, userId }) => {\n  const dispatch = useDispatch();\n  const [form, setValues] = useState({ contents: \"\" });\n\n  const onSubmit = async (e) => {\n    await e.preventDefault();\n    const { contents } = form;\n    const token = localStorage.getItem(\"token\");\n    const body = {\n      contents,\n      token,\n      id,\n      userId,\n      userName,\n    };\n\n    console.log(body);\n    dispatch({\n      type: COMMENT_UPLOADING_REQUEST,\n      payload: body,\n    });\n    resetValue.current.value = \"\";\n    setValues(\"\");\n  };\n\n  const resetValue = useRef(null);\n\n  const onChange = (e) => {\n    setValues({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n    console.log(form.contents);\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: COMMENT_LOADING_REQUEST,\n      payload: id,\n    });\n  }, [dispatch, id]);\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <FormGroup>\n          <Row className=\"p-2\">\n            <div className=\"font-weight-bold m-1\">Make Comment </div>\n            <div className=\"my-1\" />\n            <Input\n              innerRef={resetValue}\n              type=\"textarea\"\n              name=\"contents\"\n              id=\"contents\"\n              onChange={onChange}\n              placeholder=\"Comment\"\n            />\n            <Button\n              color=\"primary\"\n              block\n              className=\"mt-2 offset-md-10 col-md-2 \"\n            >\n              Submit\n            </Button>\n          </Row>\n        </FormGroup>\n      </Form>\n    </>\n  );\n};\n\nexport default Comments;\n","import React, { useEffect, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport {\n    POST_DETAIL_LOADING_REQUEST,\n    POST_DELETE_REQUEST,\n    USER_LOADING_REQUEST,\n} from \"../../redux/types\";\nimport { Button, Row, Col, Container } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport { GrowingSpinner } from \"../../components/spinner/Spinner\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faPencilAlt,\n    faCommentDots,\n    faMouse,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport BalloonEditor from \"@ckeditor/ckeditor5-editor-balloon/src/ballooneditor\";\nimport { editorConfiguration } from \"../../components/editor/EditorConfig\";\nimport Comments from \"../../components/comments/Comments\";\n\nconst PostDetail = (req) => {\n    const dispatch = useDispatch();\n    const { postDetail, creatorId, title, loading } = useSelector(\n        (state) => state.post\n    );\n    const { userId, userName } = useSelector((state) => state.auth);\n    const { comments } = useSelector((state) => state.comment);\n\n    console.log(req);\n    useEffect(() => {\n        dispatch({\n            type: POST_DETAIL_LOADING_REQUEST,\n            payload: req.match.params.id,\n        });\n        dispatch({\n            type: USER_LOADING_REQUEST,\n            payload: localStorage.getItem(\"token\"),\n        });\n    }, [dispatch, req.match.params.id]);\n\n    const onDeleteClick = () => {\n        dispatch({\n            type: POST_DELETE_REQUEST,\n            payload: {\n                id: req.match.params.id,\n                token: localStorage.getItem(\"token\"),\n            },\n        });\n    };\n\n    const EditButton = (\n        <Fragment>\n            <Row className=\"d-flex justify-content-center pb-3\">\n                <Col className=\"col-md-3 mr-md-3\">\n                    <Link to=\"/\" className=\"btn btn-primary btn-block\">\n                        Home\n                    </Link>\n                </Col>\n                <Col className=\"col-md-3 mr-md-3\">\n                    <Link\n                        to={`/post/${req.match.params.id}/edit`}\n                        className=\"btn btn-success btn-block\"\n                    >\n                        Edit Post\n                    </Link>\n                </Col>\n                <Col className=\"col-md-3\">\n                    <Button\n                        className=\"btn-block btn-danger\"\n                        onClick={onDeleteClick}\n                    >\n                        Delete\n                    </Button>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n\n    const HomeButton = (\n        <Fragment>\n            <Row className=\"d-flex justify-content-center pb-3\">\n                <Col className=\"col-sm-12 com-md-3\">\n                    <Link to=\"/\" className=\"btn btn-primary btn-block\">\n                        Home\n                    </Link>\n                </Col>\n            </Row>\n        </Fragment>\n    );\n\n    const Body = (\n        <>\n            {userId === creatorId ? EditButton : HomeButton}\n            <Row className=\"border-bottom border-top border-primary p-3 mb-3 d-flex justify-content-between\">\n                {(() => {\n                    if (postDetail && postDetail.creator) {\n                        return (\n                            <Fragment>\n                                <div className=\"font-weight-bold text-big\">\n                                    <span className=\"mr-3\">\n                                        <Button color=\"info\">\n                                            {postDetail.category.categoryName}\n                                        </Button>\n                                    </span>\n                                    {postDetail.title}\n                                </div>\n                                <div className=\"align-self-end\">\n                                    {postDetail.creator.name}\n                                </div>\n                            </Fragment>\n                        );\n                    }\n                })()}\n            </Row>\n            {postDetail && postDetail.comments ? (\n                <Fragment>\n                    <div className=\"d-flex justify-content-end align-items-baseline small\">\n                        <FontAwesomeIcon icon={faPencilAlt} />\n                        &nbsp;\n                        <span> {postDetail.date}</span>\n                        &nbsp;&nbsp;\n                        <FontAwesomeIcon icon={faCommentDots} />\n                        &nbsp;\n                        <span>{postDetail.comments.length}</span>\n                        &nbsp;&nbsp;\n                        <FontAwesomeIcon icon={faMouse} />\n                        <span>{postDetail.views}</span>\n                    </div>\n                    <Row className=\"mb-3\">\n                        <CKEditor\n                            editor={BalloonEditor}\n                            data={postDetail.contents}\n                            config={editorConfiguration}\n                            disabled=\"true\"\n                        />\n                    </Row>\n                    <Row>\n                        <Container className=\"mb-3 border border-blue rounded\">\n                            {Array.isArray(comments)\n                                ? comments.map(\n                                      ({\n                                          contents,\n                                          creator,\n                                          date,\n                                          _id,\n                                          creatorName,\n                                      }) => (\n                                          <div key={_id}>\n                                              <Row className=\"justify-content-between p-2\">\n                                                  <div className=\"font-weight-bold\">\n                                                      {creatorName\n                                                          ? creatorName\n                                                          : creator}\n                                                  </div>\n                                                  <div className=\"text-small\">\n                                                      <span className=\"font-weight-bold\">\n                                                          {date.split(\" \")[0]}\n                                                      </span>\n                                                      <span className=\"font-weight-light\">\n                                                          {\" \"}\n                                                          {date.split(\" \")[1]}\n                                                      </span>\n                                                  </div>\n                                              </Row>\n                                              <Row className=\"p-2\">\n                                                  <div>{contents}</div>\n                                              </Row>\n                                              <hr />\n                                          </div>\n                                      )\n                                  )\n                                : \"Creator\"}\n                            <Comments\n                                id={req.match.params.id}\n                                userId={userId}\n                                userName={userName}\n                            />\n                        </Container>\n                    </Row>\n                </Fragment>\n            ) : (\n                <h1>hi</h1>\n            )}\n        </>\n    );\n\n    console.log(comments, \"Comments\");\n    return (\n        <div>\n            <Helmet title={`Post | ${title}`} />\n            {loading === true ? GrowingSpinner : Body}\n        </div>\n    );\n};\n\nexport default PostDetail;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { SEARCH_REQUEST } from \"../../redux/types\";\nimport { Row } from \"reactstrap\";\nimport PostCardOne from \"../../components/post/PostCardOne\";\n\nconst Search = () => {\n    const dispatch = useDispatch();\n    let { searchTerm } = useParams();\n    const { searchResult } = useSelector((state) => state.post);\n\n    console.log(searchResult, \"useParams\");\n\n    useEffect(() => {\n        if (searchTerm) {\n            dispatch({\n                type: SEARCH_REQUEST,\n                payload: searchTerm,\n            });\n        }\n    }, [dispatch, searchTerm]);\n\n    return (\n        <div>\n            <h1>Search Results: \"{searchTerm}\"</h1>\n            <Row>\n                <PostCardOne posts={searchResult} />\n            </Row>\n        </div>\n    );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n    Col,\n    Progress,\n} from \"reactstrap\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-editor-classic/src/classiceditor\";\nimport { editorConfiguration } from \"../../components/editor/EditorConfig\";\nimport Myinit from \"../../components/editor/UploadAdapter\";\nimport { POST_EDIT_UPLOADING_REQUEST } from \"../../redux/types\";\n\nconst PostEdit = () => {\n    const { isAuthenticated } = useSelector((state) => state.auth);\n    const [form, setValues] = useState({\n        title: \"\",\n        contents: \"\",\n        fileUrl: \"\",\n    });\n    const { postDetail } = useSelector((state) => state.post);\n    const dispatch = useDispatch();\n\n    const onSubmit = async (e) => {\n        await e.preventDefault();\n        const { title, contents, fileUrl } = form;\n        const token = localStorage.getItem(\"token\");\n        const id = postDetail._id;\n        const body = { title, contents, fileUrl, token, id };\n        console.log(body);\n        dispatch({\n            type: POST_EDIT_UPLOADING_REQUEST,\n            payload: body,\n        });\n    };\n\n    const onChange = (e) => {\n        setValues({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    useEffect(() => {\n        setValues({\n            title: postDetail.title,\n            contents: postDetail.contents,\n            fileUrl: postDetail.fileUrl,\n        });\n    }, [postDetail.title, postDetail.contents, postDetail.fileUrl]);\n\n    const getDataFromCKEditor = (event, editor) => {\n        const data = editor.getData();\n        console.log(data);\n\n        if (data && data.match(\"<img src=\")) {\n            const whereImg_start = data.indexOf(\"<img src=\");\n            console.log(whereImg_start);\n            let whereImg_end = \"\";\n            let ext_name_find = \"\";\n            let result_Img_Url = \"\";\n\n            const ext_name = [\"jpeg\", \"png\", \"jpg\", \"gif\"];\n\n            for (let i = 0; i < ext_name.length; i++) {\n                if (data.match(ext_name[i])) {\n                    console.log(data.indexOf(`${ext_name[i]}`));\n                    ext_name_find = ext_name[i];\n                    whereImg_end = data.indexOf(`${ext_name[i]}`);\n                }\n            }\n            console.log(ext_name_find);\n            console.log(whereImg_end);\n\n            if (ext_name_find === \"jpeg\") {\n                result_Img_Url = data.substring(\n                    whereImg_start + 10,\n                    whereImg_end + 4\n                );\n            } else {\n                result_Img_Url = data.substring(\n                    whereImg_start + 10,\n                    whereImg_end + 3\n                );\n            }\n\n            console.log(result_Img_Url, \"result_Img_Url\");\n            setValues({\n                ...form,\n                fileUrl: result_Img_Url,\n                contents: data,\n            });\n        } else {\n            setValues({\n                ...form,\n                fileUrl: process.env.REACT_APP_BASIC_IMAGE_URL,\n                contents: data,\n            });\n        }\n    };\n\n    return (\n        <div>\n            {isAuthenticated ? (\n                <Form onSubmit={onSubmit}>\n                    <FormGroup className=\"mb-3\">\n                        <Label for=\"title\">Title</Label>\n                        <Input\n                            defaultValue={postDetail.title}\n                            type=\"text\"\n                            name=\"title\"\n                            id=\"title\"\n                            className=\"form-control\"\n                            onChange={onChange}\n                        />\n                    </FormGroup>\n                    <FormGroup className=\"mb-3\">\n                        <Label for=\"content\">Content</Label>\n                        <CKEditor\n                            editor={ClassicEditor}\n                            config={editorConfiguration}\n                            data={postDetail.contents}\n                            onReady={Myinit}\n                            onBlur={getDataFromCKEditor}\n                        />\n                        <Button\n                            color=\"success\"\n                            block\n                            className=\"mt-3 col-md-2 offset-md-10 mb-3\"\n                        >\n                            Submit\n                        </Button>\n                    </FormGroup>\n                </Form>\n            ) : (\n                <Col width={50} className=\"p-5 m-5\">\n                    <Progress animated color=\"info\" value={100} />\n                </Col>\n            )}\n        </div>\n    );\n};\n\nexport default PostEdit;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { CATEGORY_FIND_REQUEST } from \"../../redux/types\";\nimport PostCardOne from \"../../components/post/PostCardOne\";\nimport { Row } from \"reactstrap\";\n\nconst CategoryResult = () => {\n  const dispatch = useDispatch();\n  let { categoryName } = useParams();\n  const { categoryFindResult } = useSelector((state) => state.post);\n\n  console.log(categoryFindResult);\n  console.log(categoryName);\n\n  useEffect(() => {\n    dispatch({\n      type: CATEGORY_FIND_REQUEST,\n      payload: categoryName,\n    });\n  }, [dispatch, categoryName]);\n\n  return (\n    <div>\n      <h1>Category: \"{categoryName}\"</h1>\n      <Row>\n        <PostCardOne posts={categoryFindResult.posts} />\n      </Row>\n    </div>\n  );\n};\n\nexport default CategoryResult;\n","import React, { useState, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport {\n    CLEAR_ERROR_REQUEST,\n    PASSWORD_EDIT_UPLOADING_REQUEST,\n} from \"../../redux/types\";\nimport Helmet from \"react-helmet\";\nimport {\n    Col,\n    Card,\n    CardHeader,\n    CardBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Alert,\n    Button,\n} from \"reactstrap\";\n\nconst Profile = () => {\n    const { userId, errorMsg, successMsg, previousMatchMsg } = useSelector(\n        (state) => state.auth\n    );\n    const { userName } = useParams();\n    const [form, setValues] = useState({\n        previousPassword: \"\",\n        password: \"\",\n        rePassword: \"\",\n    });\n    const dispatch = useDispatch();\n    const onChange = (e) => {\n        setValues({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const onSubmit = async (e) => {\n        await e.preventDefault();\n        const { previousPassword, password, rePassword } = form;\n        const token = localStorage.getItem(\"token\");\n\n        const body = {\n            password,\n            token,\n            previousPassword,\n            rePassword,\n            userId,\n            userName,\n        };\n\n        dispatch({\n            type: CLEAR_ERROR_REQUEST,\n        });\n        dispatch({\n            type: PASSWORD_EDIT_UPLOADING_REQUEST,\n            payload: body,\n        });\n    };\n\n    return (\n        <Fragment>\n            <Helmet title={`Profile | ${userName} Profile`} />\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <Card>\n                    <CardHeader>\n                        <strong>Edit Password</strong>\n                    </CardHeader>\n                    <CardBody>\n                        <Form onSubmit={onSubmit}>\n                            <FormGroup>\n                                <Label for=\"title\">password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"previousPassword\"\n                                    id=\"previousPassword\"\n                                    className=\"form-control mb-2\"\n                                    onChange={onChange}\n                                />\n                                {previousMatchMsg ? (\n                                    <Alert color=\"danger\">\n                                        {previousMatchMsg}\n                                    </Alert>\n                                ) : (\n                                    \"\"\n                                )}\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"title\">New password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    className=\"form-control\"\n                                    onChange={onChange}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"title\">Confirm Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"rePassword\"\n                                    id=\"rePassword\"\n                                    className=\"form-control mb-2\"\n                                    onChange={onChange}\n                                />\n                                {errorMsg ? (\n                                    <Alert color=\"danger\">{errorMsg}</Alert>\n                                ) : (\n                                    \"\"\n                                )}\n                            </FormGroup>\n                            <Button\n                                color=\"success\"\n                                block\n                                className=\"mt-4 mb-4 col-md-3 offset-9\"\n                            >\n                                Submit\n                            </Button>\n                            {successMsg ? (\n                                <Alert color=\"success\">{successMsg}</Alert>\n                            ) : (\n                                \"\"\n                            )}\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Fragment>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const EditProtectedRoute = ({ component: Component, ...rest }) => {\n  const { userId } = useSelector((state) => state.auth);\n  const { creatorId } = useSelector((state) => state.post);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (userId === creatorId) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n\nexport const ProfileProtectedRoute = ({ component: Component, ...rest }) => {\n  const { userName } = useSelector((state) => state.auth);\n  console.log(userName);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (props.match.params.userName === userName) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","import React, { Fragment } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport AppNavbar from \"../components/AppNavbar\";\nimport { Container } from \"reactstrap\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PostCardList from \"./normalRoute/PostCardList\";\nimport PostWrite from \"./normalRoute/PostWrite\";\nimport PostDetail from \"./normalRoute/PostDetail\";\nimport Search from \"./normalRoute/Search\";\nimport PostEdit from \"./normalRoute/PostEdit\";\nimport CategoryResult from \"./normalRoute/CategoryResult\";\nimport Profile from \"./normalRoute/Profile\";\nimport {\n  EditProtectedRoute,\n  ProfileProtectedRoute,\n} from \"./protectedRoute/ProtectedRoute\";\n\nconst MyRouter = () => (\n  <Fragment>\n    <AppNavbar />\n    <Header />\n    <Container id=\"main-body\">\n      <Switch>\n        <Route path=\"/\" exact component={PostCardList} />\n        <Route path=\"/post\" exact component={PostWrite} />\n        <Route path=\"/post/:id\" exact component={PostDetail} />\n        <EditProtectedRoute path=\"/post/:id/edit\" exact component={PostEdit} />\n        <Route\n          path=\"/post/category/:categoryName\"\n          exact\n          component={CategoryResult}\n        />\n        <Route path=\"/search/:searchTerm\" exact component={Search} />\n        <ProfileProtectedRoute\n          path=\"/user/:userName/profile\"\n          exact\n          component={Profile}\n        />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </Container>\n    <Footer />\n  </Fragment>\n);\n\nexport default MyRouter;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport store, { history } from \"./store\";\nimport MyRouter from \"./routes/Router\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/custom.scss\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <MyRouter />\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","import store from \"../../store\";\nimport { USER_LOADING_REQUEST } from \"../../redux/types\";\n\nconst loadUser = () => {\n  try {\n    store.dispatch({\n      type: USER_LOADING_REQUEST,\n      payload: localStorage.getItem(\"token\"),\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default loadUser;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport loadUser from \"./components/auth/loadUser\";\n\nloadUser();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}